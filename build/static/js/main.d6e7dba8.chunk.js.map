{"version":3,"sources":["leanCloud/leanCloud.js","TodoInput/TodoInput.js","TodoItems/TodoItems.js","UserDialog/SignInForm.js","UserDialog/SignUpForm.js","UserDialog/UserDialog.js","App.js","serviceWorker.js","index.js"],"names":["AV","init","appId","appKey","getUserFromAVUser","AVUser","Object","objectSpread","id","attributes","getCurrentUser","user","User","current","TodoInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","e","reflashNewToDo","target","value","addTodo","key","clearNewTodo","_this$props","newTodo","showSelectAll","selectAll","react_default","a","createElement","className","concat","onClick","aria-hidden","xlinkHref","type","placeholder","tips","onChange","newTodoOnChange","bind","onKeyPress","Component","TodoItems","selectedType","seenTodoList","item","toggleSelected","setState","Todolists","arr","filter","v","status","delTodo","batchDelTodo","_this2","selectedId","leftNumber","length","todos","filterTodoList","map","index","selected","indexOf","item-id","console","log","onDoubleClick","content","changeSelectedType","SignInForm","onDataChange","preventDefault","onSubmit","error","SignUpForm","UserDialog","selectedTab","formData","username","password","email","textContent","changeUser","fetchAllTodos","_this$state","_this$state$formData","success","temp","code","rawMessage","userName","passWord","successFn","errorFn","setUsername","setPassword","setEmail","signUp","then","loginedUser","logIn","loggedInUser","signIn","_this$state2","changeTab","src_UserDialog_SignInForm","changeDataForm","signUpOrIn","src_UserDialog_SignUpForm","App","todoList","obj","todo","extend","set","save","userId","push","alert","_this3","createWithoutData","destroy","_this4","idList","objects","destroyAll","saveAll","batchUpdateTodos","_this5","_this6","logOut","callback","_this7","Query","find","filterList","i","_this$state3","signOut","src_TodoInput_TodoInput","src_TodoItems_TodoItems","src_UserDialog_UserDialog","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6e7dba8.chunk.js","sourcesContent":["import AV from 'leancloud-storage';\n\n\nvar APP_ID = 'mQOGtDlcxXM9tJzjMOXV31ok-gzGzoHsz';\nvar APP_KEY = 'jbFTLad0MUEduMTU8ihF9ujC';\n\nAV.init({\n    appId: APP_ID,\n    appKey: APP_KEY\n});\n\n\nexport default AV;\n\nexport function signUp(email, userName, passWord, successFn, errorFn) {\n    // 新建AVUser实例\n    let user = new AV.User();\n\n    // 设置用户名\n    user.setUsername(userName);\n\n    // 设置密码\n    user.setPassword(passWord);\n\n    // 设置邮箱\n    user.setEmail(email);\n\n    user.signUp().then(function (loginedUser) {\n        let user = getUserFromAVUser(loginedUser)\n        successFn.call(null, user)\n    }, function (error) {\n        errorFn.call(null, error)\n    })\n\n    return undefined\n};\n\nfunction getUserFromAVUser(AVUser) {\n    return {\n        id: AVUser.id,\n        ...AVUser.attributes\n    }\n}\n\n// 读取上次登录的用户\nexport function getCurrentUser() {\n    let user = AV.User.current();\n    if (user) {\n        return getUserFromAVUser(user)\n    } else {\n        return null\n    }\n}\n\n// 登出操作\nexport function signOut() {\n    AV.User.logOut()\n    return undefined\n}\n\nexport function signIn(username, password, successFn, errorFn) {\n    AV.User.logIn(username, password).then(function (loggedInUser) {\n        let user = getUserFromAVUser(loggedInUser);\n        successFn.call(null, user);\n    }, function (error) {\n        errorFn.call(null, error)\n    });\n}\n\n// 新增Todo\nexport function addTodo(obj, successFn, errorFn) {\n    let Todo = AV.Object.extend('Todo');\n    let todo = new Todo();\n\n    for(let key in obj) {\n        todo.set(key, obj[key]);\n    }\n    todo.save().then((todo)=> {\n        todo = getUserFromAVUser(todo);\n        successFn(todo);\n    }, (error) => {\n        errorFn(error);\n    });\n}\n\nexport function delTodo(id, successFn, errorFn) {\n    var todo = AV.Object.createWithoutData('Todo', id);\n    todo.destroy().then(function (success) {\n        // 删除成功\n        success = getUserFromAVUser(success);\n        successFn(success);\n    }, function (error) {\n        // 删除失败\n        errorFn(error)\n    });\n}\n\n// 批量删除Todo\nexport function batchDelTodo(idList, successFn, errorFn) {\n    let objects = [];\n    idList.map( v => {\n        objects.push(AV.Object.createWithoutData('Todo', v));\n    });\n    // 批量删除\n    AV.Object.destroyAll(objects).then(function () {\n        // 成功\n        successFn();\n    }, function (error) {\n        // 异常处理\n        errorFn(error);\n    });\n}\n\nexport function batchUpdateTodos(idList, type, successFn, errorFn) {\n    let objects = [];\n    idList.map( v => {\n        let todo = AV.Object.createWithoutData('Todo', v);\n        todo.set('status', type)\n        objects.push(todo);\n    });\n\n    // 批量创建（更新）\n    AV.Object.saveAll(objects).then(function (objects) {\n        successFn();\n    }, function (error) {\n        // 异常处理\n        errorFn(error)\n    });\n\n}\n\n// 获取对应userId的TodoList\nexport function fetchAllTodos(userId, successFn, errorFn) {\n    var query = new AV.Query('Todo');\n    query.find().then(function (todos) {\n        // 先过滤出对应userId的TodoList\n        let filterList = [];\n        for(let i = 0; i < todos.length; i++) {\n            let current = getUserFromAVUser(todos[i]);\n            if(current.userId === userId) {\n                filterList.push(current);\n            }\n        }\n        return AV.Object.saveAll(filterList);\n    }).then(function(todos) {\n        // 更新成功\n        successFn(todos)\n    }, function (error) {\n        // 异常处理\n        errorFn(error);\n    });\n}","import React, { Component } from 'react';\n\n\nimport './TodoInput.css';\n\nclass TodoInput extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    // 监听新建Todo内容\n    newTodoOnChange(e) {\n        let { reflashNewToDo } = this.props;\n        let value = e.target.value;\n        reflashNewToDo(value);\n    }\n\n    // 清空newTodo\n    clearNewTodo() {\n        let {reflashNewToDo} = this.props;\n        reflashNewToDo('');\n    }\n\n    // 监听回车事件\n    onKeyPress(e) {\n        let { addTodo } = this.props;\n        let key = e.key;\n        if(key === \"Enter\") {\n            // 新增Todo，然后清空input栏\n            addTodo();\n            this.clearNewTodo();\n        }\n    }\n\n    render() {\n        let { newTodo, showSelectAll, selectAll} = this.props;\n\n        return(\n            <div className=\"TodoInput\">\n                <div className={`selectAll-wrapper ${showSelectAll ? '' : 'hidden'}`}\n                     onClick={() => selectAll()}\n                >\n                    <svg className=\"icon icon-arrow\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-arrow\"></use>\n                    </svg>\n                </div>\n                <input className=\"new-todo\" type=\"text\" placeholder={tips}\n                       value={newTodo}\n                       onChange={this.newTodoOnChange.bind(this)}\n                       onKeyPress={this.onKeyPress.bind(this)}\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default TodoInput;\n\n\nlet tips = \"What needs to be done?\"","import React, { Component } from 'react';\n\n\nimport './TodoItems.css';\n\nclass TodoItems extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedType: 'All', // All / Active / Completed\n            seenTodoList: [], // 呈现的list\n        };\n    }\n\n    toggleSelected(item) {\n        this.props.toggleSelected.call(null, item);\n    }\n\n    changeSelectedType(value) {\n        this.setState({\n            ...this.state,\n            selectedType: value\n        });\n    }\n\n    filterTodoList(Todolists, selectedType) {\n        let arr = [];\n        switch(selectedType) {\n            case 'All':\n                arr = Todolists;\n                break;\n            case 'Active':\n                arr = Todolists.filter(v => v.status !== 'completed');\n                break;\n            case 'Completed':\n                arr = Todolists.filter(v => v.status === 'completed');\n                break;\n            default:\n                break;\n        }\n\n        return arr;\n    }\n\n    delTodo(id) {\n        this.props.delTodo.call(null, id);\n    }\n\n    batchDelTodo() {\n        this.props.batchDelTodo.call(null);\n    }\n\n    render() {\n\n        let {selectedId, Todolists} = this.props;\n        let {selectedType} = this.state;\n        let leftNumber = Todolists.length - selectedId.length;\n        let filterList = this.filterTodoList(Todolists, selectedType);\n\n        let todos = filterList.map(\n            (item, index) => {\n                let selected = selectedId.indexOf(item.id) >= 0;\n                return (\n                    <li className={`todo-item ${selected ? 'completed' : ''}`} key={index} item-id={item.id}\n                        onChange={(e) => console.log(e.target.value)}\n                        onDoubleClick={(e) => console.log(e.target)}\n                    >\n                        <div className=\"check-wrapper\" onClick={() => this.toggleSelected(item)}>\n                            <svg className={`icon icon-${selected ? 'checked' : 'unchecked'}`} aria-hidden=\"true\">\n                                <use xlinkHref={`#icon-${selected ? 'checked' : 'unchecked'}`}></use>\n                            </svg>\n                        </div>\n                        <p className=\"item-content\">\n                            {item.content}\n                            <svg className=\"icon icon-close\" aria-hidden=\"true\" onClick={() => this.delTodo(item.id)}>\n                                <use xlinkHref=\"#icon-close\"></use>\n                            </svg>\n                        </p>\n                    </li>\n                );\n            }\n        );\n        return (\n            <div className=\"TodoItems\">\n                <ul className=\"todo-list\">\n                    {todos}\n                </ul>\n                <footer className={`TodoItems-footer clearfix`}>\n                    <span className=\"left\">{leftNumber} iterm{`${leftNumber > 1 ? 's' : ''}`} left</span>\n                    <ul className=\"filters\">\n                        <li className={`filters-all ${selectedType === 'All' ? 'active' : ''}`} onClick={() => this.changeSelectedType('All')}>All</li>\n                        <li className={`filters-active ${selectedType === 'Active' ? 'active' : ''}`} onClick={() => this.changeSelectedType('Active')}>Active</li>\n                        <li className={`filters-completed ${selectedType === 'Completed' ? 'active' : ''}`} onClick={() => this.changeSelectedType('Completed')}>Completed</li>\n                    </ul>\n                    <span className=\"clear-completed\" onClick={() => this.batchDelTodo()}>Clear completed</span>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default TodoItems;","import React, { Component } from 'react';\n\nimport './SignInForm.css';\n\nclass SignInForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    onDataChange(e, type) {\n        let {onDataChange} = this.props;\n        let value = e.target.value;\n        onDataChange(value, type)\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.props.onSubmit();\n    }\n\n    render() {\n        let { error } = this.props;\n        return(\n            <div className=\"SignInForm\">\n                <form className=\"signIn-form\" onSubmit={(e) => this.onSubmit(e)}>\n                    <div className=\"input-wrapper\">\n                        <svg className=\"icon icon-user\" aria-hidden=\"true\">\n                            <use xlinkHref={`#icon-user`}></use>\n                        </svg>\n                        <input type=\"text\" placeholder={'Username'} onChange={(e) => this.onDataChange(e, 'username')} />\n                    </div>\n\n                    <div className=\"input-wrapper\">\n                        <svg className=\"icon icon-password\" aria-hidden=\"true\">\n                            <use xlinkHref={`#icon-password`}></use>\n                        </svg>\n                        <input type=\"password\" placeholder={'Password'} onChange={(e) => this.onDataChange(e, 'password')} />\n                    </div>\n                    {\n                        error && <p className=\"tips\">{error}</p>\n                    }\n                    <button className=\"signIn-button\">Sign In</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SignInForm;","import React, { Component } from 'react';\n\nimport './SignUpForm.css';\n\nclass SignUpForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    onDataChange(e, type) {\n        let {onDataChange} = this.props;\n        let value = e.target.value;\n        onDataChange(value, type)\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.props.onSubmit();\n    }\n\n    render() {\n        let { error } = this.props;\n        return(\n            <div className=\"SignUpForm\">\n                <form className=\"signUp-form\" onSubmit={(e) => this.onSubmit(e)}>\n                    <div className=\"input-wrapper\">\n                        <svg className=\"icon icon-email\" aria-hidden=\"true\">\n                            <use xlinkHref={`#icon-email`}></use>\n                        </svg>\n                        <input type=\"text\" placeholder={'Email'} onChange={(e) => this.onDataChange(e, 'email')}/>\n                    </div>\n\n                    <div className=\"input-wrapper\">\n                        <svg className=\"icon icon-user\" aria-hidden=\"true\">\n                            <use xlinkHref={`#icon-user`}></use>\n                        </svg>\n                        <input type=\"text\" placeholder={'Username'} onChange={(e) => this.onDataChange(e, 'username')} />\n                    </div>\n\n                    <div className=\"input-wrapper\">\n                        <svg className=\"icon icon-password\" aria-hidden=\"true\">\n                            <use xlinkHref={`#icon-password`}></use>\n                        </svg>\n                        <input type=\"password\" placeholder={'Password'} onChange={(e) => this.onDataChange(e, 'password')} />\n                    </div>\n                    {\n                        error && <p className=\"tips\">{error}</p>\n                    }\n                    <button className=\"signUp-button\">Sign Up</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SignUpForm;","import React, { Component } from 'react';\n\nimport {signUp, signIn} from \"../leanCloud/leanCloud\";\n\nimport './UserDialog.css';\nimport SignInForm from \"./SignInForm\";\nimport SignUpForm from \"./SignUpForm\";\n\nclass UserDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'signUp',\n            formData: {\n                username: '',\n                password: '',\n                email: ''\n            },\n            error: ''\n        };\n    }\n\n    changeTab(e) {\n        let value = e.target.attributes['value'].textContent;\n        this.setState({\n            ...this.state,\n            selectedTab: value\n        });\n    }\n\n    changeDataForm(value, type) {\n        let {formData} = this.state;\n        formData[type] = value;\n        this.setState({\n            ...this.state,\n            formData\n        })\n    }\n\n\n    // 注册/登录操作\n    signUpOrIn() {\n        let { changeUser, fetchAllTodos} = this.props;\n        let { formData: {email, username, password}, selectedTab} = this.state;\n        let success = (user)=>{\n            changeUser.call(null, user);\n            fetchAllTodos();\n        }\n        let error = (error)=>{\n            let temp = '';\n            switch(error.code) {\n                case 125:\n                    temp = \"电子邮箱地址无效\";\n                    break;\n                case 200:\n                    temp = \"用户名或者用户名为空\";\n                    break;\n                case 201:\n                    temp = \"请填写密码\";\n                    break;\n                case 202:\n                    temp = \"用户名已经被占用\";\n                    break;\n                case 210:\n                    temp = \"用户名和密码不匹配\";\n                    break;\n                case 219:\n                    temp = \"登录失败次数超过限制，请稍候再试，或者通过忘记密码重设密码\";\n                    break;\n                default:\n                    temp = error.rawMessage;\n            };\n            console.log('1111111', error)\n            this.setState({\n                ...this.state,\n                error: temp\n            });\n        }\n        if(selectedTab === \"signUp\") {\n            signUp(email, username, password, success, error)\n        }\n        if(selectedTab === \"signIn\") {\n            signIn(username, password, success, error)\n        }\n    }\n\n    render() {\n        let { selectedTab, error } = this.state;\n        return(\n            <div className=\"UserDialog-wrapper\">\n                <div className=\"UserDialog\">\n                    <ul className=\"tab-list\">\n                       <li className={`tab-item ${selectedTab === 'signUp' ? 'active' : ''}`} value={'signUp'} onClick={this.changeTab.bind(this)}>Sign Up</li>\n                       <li className={`tab-item ${selectedTab === 'signIn' ? 'active' : ''}`} value={'signIn'} onClick={this.changeTab.bind(this)}>Sign In</li>\n                    </ul>\n                    {\n                        selectedTab === \"signIn\" ?\n                            <SignInForm onDataChange={this.changeDataForm.bind(this)}\n                                        onSubmit={this.signUpOrIn.bind(this)}\n                                        error={error}\n                            />\n                            :\n                            <SignUpForm onDataChange={this.changeDataForm.bind(this)}\n                                        onSubmit={this.signUpOrIn.bind(this)}\n                                        error={error}\n                            />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserDialog;","import React, { Component } from 'react';\n\nimport {getCurrentUser, signOut, addTodo, batchUpdateTodos, fetchAllTodos, delTodo, batchDelTodo} from './leanCloud/leanCloud';\nimport TodoInput from './TodoInput/TodoInput';\nimport TodoItems from './TodoItems/TodoItems';\nimport UserDialog from './UserDialog/UserDialog';\n\n\nimport './reset.css';\nimport 'normalize.css';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: getCurrentUser() || {},\n      newTodo: '',\n      todoList: [],\n      selectedId: [],\n    }\n  }\n\n  // 更新newTodo窗口的内容\n  reflashNewToDo(value) {\n    this.setState({\n      ...this.state,\n      newTodo: value\n    })\n  }\n\n  // 新增Todo\n  addTodo() {\n    let {todoList, newTodo, user} = this.state;\n    let successFn = (todo) => {\n      todoList.push(todo);\n      this.setState({\n        ...this.state,\n        todoList: todoList\n      });\n    };\n    let errorFn =  (error) => {\n      alert(error);\n    };\n\n    // 不为空\n    if(newTodo !== '') {\n      let dataModel = {\n        userId: user.id,\n        content: newTodo,\n        status: 'active', // Complted or not\n      };\n      addTodo(dataModel, successFn, errorFn);\n    }\n  }\n\n  // 直接删除单个Todo\n  delTodo(id) {\n    let successFn = (todo) => {\n      this.fetchAllTodos();\n    }\n    delTodo(id, successFn, null);\n  }\n\n  // 批量删除Todo\n  batchDelTodo() {\n    let { selectedId } = this.state;\n    let succesFn = () => {\n      this.setState({\n        ...this.state,\n        selectedId: []\n      });\n      this.fetchAllTodos();\n    }\n    batchDelTodo(selectedId, succesFn, null)\n  }\n\n  batchUpdateTodos(idList, type, successFn) {\n    batchUpdateTodos(idList, type, successFn, null);\n  }\n\n  // 选择/取消选择所有item\n  selectAll() {\n    let {todoList, selectedId} = this.state;\n    let idList = todoList.map(v => v.id);\n    if(selectedId.length !== todoList.length) {\n      let successFn = () => {\n        // 获取最新数据\n        this.fetchAllTodos();\n      };\n      this.batchUpdateTodos(idList, 'completed', successFn)\n\n    } else {\n      let successFn = () => {\n        // 获取最新数据\n        this.fetchAllTodos();\n      };\n      this.batchUpdateTodos(idList, 'active', successFn)\n\n    }\n  }\n\n  // 新增/删除selectedId，同时修改item的status\n  toggleSelected(item) {\n    let {selectedId} = this.state;\n    if(selectedId.indexOf(item.id) < 0) {\n      let successFn = () => {\n        // 获取最新数据\n        this.fetchAllTodos();\n      }\n      let idList = [item.id];\n      this.batchUpdateTodos(idList, 'completed', successFn)\n    } else {\n      let successFn = () => {\n        // 获取最新数据\n        this.fetchAllTodos();\n      };\n      let idList = [item.id]\n      this.batchUpdateTodos(idList, 'active', successFn)\n    }\n\n  }\n\n  changeUser(user) {\n    this.setState({\n      ...this.state,\n      user: user\n    });\n  }\n\n  // 登出操作\n  signOut() {\n    signOut();\n    this.setState({\n      user: {},\n      newTodo: '',\n      todoList: [],\n      selectedId: []\n    });\n  }\n\n  // 获取最新数据\n  fetchAllTodos(callback) {\n    let userId = this.state.user.id;\n    let successFn = (todoList) => {\n      let selectedId = [];\n      for(let i = 0; i <  todoList.length; i++) {\n        if(todoList[i].status === 'completed') {\n          selectedId.push(todoList[i].id)\n        }\n      }\n      this.setState({\n        ...this.state,\n        todoList: todoList,\n        selectedId: selectedId\n      });\n      callback && callback();\n    };\n    fetchAllTodos(userId, successFn, null);\n  }\n\n  componentDidMount() {\n    this.fetchAllTodos();\n  }\n\n\n  render() {\n    let {newTodo, todoList, selectedId, user} = this.state;\n    return (\n      <div className=\"App\">\n        {\n          user.id &&\n          <div className=\"welcome-wrapper\">\n            <p className=\"welcome-tips\">Welcome!<span className=\"user-name\">{user.username}</span></p>\n            <span className=\"signOut-btn\" onClick={this.signOut.bind(this)}>Sign out</span>\n          </div>\n        }\n        <div className=\"main-content\">\n          <h1 className=\"todos-title\">todos</h1>\n\n          <TodoInput reflashNewToDo={this.reflashNewToDo.bind(this)}\n                     addTodo={this.addTodo.bind(this)}\n                     newTodo={newTodo}\n                     showSelectAll={todoList.length > 0 ? true : false}\n                     signOut={this.signOut.bind(this)}\n                     selectAll={this.selectAll.bind(this)}\n          />\n          {\n            todoList.length > 0 &&\n            <TodoItems Todolists={todoList} selectedId={selectedId}\n                       toggleSelected={this.toggleSelected.bind(this)}\n                       delTodo={this.delTodo.bind(this)}\n                       batchDelTodo={this.batchDelTodo.bind(this)}\n            />\n          }\n          {\n            !user.id && <UserDialog changeUser={this.changeUser.bind(this)}\n                                    fetchAllTodos={this.fetchAllTodos.bind(this)}\n            />\n          }\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}